 #include <iostream>
#include <memory>
#include "shift_reduce_ast.h"          // Use the correct AST header
#include "shift_reduce_parser.h"       // Include parser header
#include "shift_reduce_lexer.h"        // Include lexer header generated by Flex

int main(int argc, char* argv[]) {
    if (argc < 2) {
        std::cerr << "Usage: ./calc \"expression\"" << std::endl;
        return 1;
    }

    for (int argi = 1; argi < argc; ++argi) {
        try {
            std::string input = argv[argi];
            std::cout << "Parsing expression: " << input << std::endl;

            // Set up input buffer for Flex
            YY_BUFFER_STATE buffer = yy_scan_string(input.c_str());
            if (yyparse() == 0 && root != nullptr) {
                std::cout << "AST:" << std::endl;
                root->print(4);
                std::cout << "Result: " << root->eval() << std::endl;
                delete root;
                root = nullptr;
            } else {
                std::cerr << "Failed to parse expression: " << input << std::endl;
                delete root;
                root = nullptr;
            }
            yy_delete_buffer(buffer);
        } catch (const std::exception& ex) {
            std::cerr << ex.what() << std::endl;
            delete root;
            root = nullptr;
        }
    }
    return 0;
}
